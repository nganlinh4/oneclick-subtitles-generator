/* Reference text wrapper - maintains the flex layout */
.reference-text-wrapper {
  flex: 1;
  min-width: 0; /* Prevent flex item from overflowing */
  display: flex;
  flex-direction: column;
  height: 100%;
}

/* Legacy reference text container (for backward compatibility) */
.reference-text-container {
  position: relative;
  flex: 1;
  min-width: 0; /* Prevent flex item from overflowing */
  display: flex;
  flex-direction: column;
  height: 100%;
  border-radius: 20px;
  overflow: hidden; /* Contain the scrollbar within rounded corners */
  background-color: var(--md-surface-2);
  box-shadow: var(--md-elevation-level1);
  border: 1px solid rgba(var(--md-outline-variant-rgb, 121, 116, 126), 0.3);
  transition: all 0.2s ease;
}

/* Reference text textarea - hide native scrollbar completely */
.reference-text {
  width: 100%;
  padding: 16px;
  border: none;
  border-radius: 0;
  background-color: transparent;
  color: var(--md-on-surface);
  font-size: 0.95rem;
  resize: none !important;
  min-height: 60px;
  height: auto !important;
  flex: 1;
  transition: all 0.2s ease;
  font-family: var(--font-primary);
  line-height: 1.5;
  overflow-y: scroll;
  overflow-x: hidden;
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  position: relative;
  z-index: 1;
  outline: none;

  /* Completely hide ALL native scrollbars */
  scrollbar-width: none !important; /* Firefox */
  -ms-overflow-style: none !important; /* IE and Edge */
}

/* Force hide webkit scrollbar completely */
.reference-text::-webkit-scrollbar {
  display: none !important;
  width: 0 !important;
  height: 0 !important;
  background: transparent !important;
}

.reference-text::-webkit-scrollbar-track {
  display: none !important;
}

.reference-text::-webkit-scrollbar-thumb {
  display: none !important;
}

.reference-text::-webkit-scrollbar-corner {
  display: none !important;
}

/* Focus state - apply to container instead of textarea */
.reference-text-container:focus-within {
  box-shadow: var(--md-elevation-level2), 0 0 0 1px var(--md-primary);
  border: 2px solid var(--md-primary);
  background-color: var(--md-surface-2);
  transform: translateY(-1px);
}

.reference-text-container:focus-within .reference-text {
  padding: 14px; /* Adjust padding to maintain the same size when border appears */
}

.reference-text:disabled {
  cursor: not-allowed;
  opacity: 0.6;
}

.reference-text-container:has(.reference-text:disabled) {
  opacity: 0.6;
  cursor: not-allowed;
}

.reference-text:not(:placeholder-shown) {
  min-height: 80px !important; /* Slightly taller when it has content */
}

/* Custom scrollbar track */
.reference-text-container::before {
  content: '';
  position: absolute;
  top: 8px;
  right: 5px;
  bottom: 8px;
  width: 4px;
  background: rgba(var(--md-outline-variant-rgb, 121, 116, 126), 0.15);
  border-radius: 50px; /* Pill shape */
  opacity: 0;
  transition: opacity 0.3s ease;
  pointer-events: none;
  z-index: 9;
}

/* Custom scrollbar thumb - positioned dynamically by JavaScript */
.custom-scrollbar-thumb {
  position: absolute;
  right: 5px;
  width: 4px;
  background: rgba(var(--md-primary-rgb, 103, 80, 164), 0.6);
  border-radius: 50px; /* Pill shape */
  opacity: 0;
  transition: all 0.3s ease;
  pointer-events: auto;
  z-index: 10;
  cursor: pointer;
  min-height: 20px;
}

/* Show scrollbar track only when container has scrollable content */
.reference-text-container.has-scrollable-content:hover::before,
.reference-text-container.has-scrollable-content:focus-within::before {
  opacity: 1;
}

/* Show scrollbar thumb on hover or focus */
.reference-text-container:hover .custom-scrollbar-thumb,
.reference-text-container:focus-within .custom-scrollbar-thumb {
  opacity: 1;
}

/* Enhanced hover state for thumb */
.custom-scrollbar-thumb:hover {
  width: 6px;
  right: 4px;
  background: rgba(var(--md-primary-rgb, 103, 80, 164), 0.8);
}

/* Active state for thumb */
.custom-scrollbar-thumb:active {
  background: var(--md-primary);
  width: 6px;
  right: 4px;
}

/* Dark mode scrollbar */
[data-theme="dark"] .reference-text-container::before {
  background: rgba(var(--md-outline-variant-rgb, 200, 196, 206), 0.15);
}

[data-theme="dark"] .custom-scrollbar-thumb {
  background: rgba(var(--md-primary-rgb, 208, 188, 255), 0.6);
}

[data-theme="dark"] .custom-scrollbar-thumb:hover {
  background: rgba(var(--md-primary-rgb, 208, 188, 255), 0.8);
}

[data-theme="dark"] .custom-scrollbar-thumb:active {
  background: var(--md-primary);
}

/* Dragging state */
.custom-scrollbar-thumb.dragging {
  background: var(--md-primary) !important;
  width: 6px !important;
  right: 4px !important;
  opacity: 1 !important;
  transition: none !important; /* Disable transitions while dragging */
}

/* Smooth scrolling for the textarea */
.reference-text {
  scroll-behavior: smooth;
}

/* Smooth scrolling */
.reference-text {
  scroll-behavior: smooth;
}

/* Switch component */
.switch-container {
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

/* Material Web Switch container in reference content row */
.reference-content-row .material-switch-container {
  background-color: var(--md-surface-1);
  padding: 0.5rem 0.75rem;
  border-radius: 24px;
  border: 1px solid var(--md-outline-variant);
  /* Ensure it's clickable */
  position: relative;
  flex-shrink: 0;
  align-self: flex-start;
  box-shadow: var(--md-elevation-level1);
  margin-top: 0px;
}

/* Legacy support - keep for any remaining old switch containers */
.reference-content-row .switch-container {
  background-color: var(--md-surface-1);
  padding: 0.5rem 0.75rem;
  border-radius: 24px;
  border: 1px solid var(--md-outline-variant);
  position: relative;
  flex-shrink: 0;
  align-self: flex-start;
  margin-top: 16px;
  box-shadow: var(--md-elevation-level1);
}

/* Switch styling - Material Design toggle */
.switch {
  position: relative;
  display: inline-block;
  width: 36px;
  height: 20px;
  flex-shrink: 0;
}

.switch input {
  opacity: 0;
  width: 0;
  height: 0;
  margin: 0;
  padding: 0;
}


