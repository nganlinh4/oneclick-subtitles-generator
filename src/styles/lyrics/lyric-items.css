/* Lyric items and related components */

.lyric-item-container {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: stretch;
  min-height: 40px; /* Ensure minimum height for better spacing */
}

/* Material Design 3 list item for lyrics - improved for multi-line text */
/* Important: remove vertical padding from the hover target to avoid early hover in virtualized lists. */
.lyric-item {
  position: relative;
  padding: 0; /* Vertical padding moved to inner content to prevent early hover */
  border-bottom: 1px solid var(--md-outline-variant);
  cursor: pointer;
  transition: background-color var(--md-duration-medium3) var(--md-easing-emphasized),
              color var(--md-duration-medium3) var(--md-easing-emphasized),
              transform var(--md-duration-medium3) var(--md-easing-emphasized),
              border-left var(--md-duration-medium3) var(--md-easing-emphasized),
              padding-left var(--md-duration-medium3) var(--md-easing-emphasized),
              font-weight var(--md-duration-medium2) var(--md-easing-standard),
              box-shadow var(--md-duration-medium3) var(--md-easing-emphasized);
  color: var(--md-on-surface);
  font-size: var(--md-body-medium-size);
  line-height: var(--md-body-medium-height);
  z-index: 1;
  min-height: 48px; /* Minimum height for consistency */
  height: auto !important; /* Override fixed height from virtualized list */
  overflow: visible; /* Ensure content is fully visible */
  border-radius: 8px;
}

.lyric-item:last-child {
  border-bottom: none;
}

/* Material Design 3 state layers for list items - enhanced styling */
.lyric-item:hover:not(.dragging):not(.arrow-hover) {
  background-color: color-mix(in srgb, var(--md-primary), transparent 95%);
  /* Removed the transform that pushed items to the right */
}

/* Prevent hover effect when arrow buttons are being interacted with */
.lyric-item.arrow-hover {
  background-color: transparent;
  z-index: 1000; /* Ensure this row sits above neighboring rows while interacting with arrows */
  position: relative;
}

.lyric-item.current {
  background-color: color-mix(in srgb, var(--md-primary), transparent 85%);
  border-left: 4px solid var(--md-primary);
  /* Adjust padding to compensate for the border without pushing content right */
  padding-left: calc(16px - 4px); /* Default 16px minus the 4px border */
  font-weight: 500;
  box-shadow: inset 0 0 8px color-mix(in srgb, var(--md-primary), transparent 80%);
  /* Add subtle slide-in effect when becoming current */
  /* Slightly higher z-index for current item */
  z-index: 2;
  /* Apply smooth focus animation */
  border-radius: 4px;

}

/* Ensure editing lyric floats above others even if not current */
.lyric-item.editing-active {
  position: relative;
  z-index: 1002; /* Above current item (z-index:2) and arrows */
  box-shadow: var(--md-elevation-level2);
}


/* Material Design 3 lyric content - improved for multi-line text */
/* Use top padding (no bottom) to nudge content down without affecting neighbor hover in virtualized lists. */
.lyric-content {
  display: flex;
  align-items: flex-start; /* Align to top for multi-line text */
  gap: 12px;
  position: relative;
  width: 100%;
  flex-wrap: wrap; /* Allow wrapping for very long content */
  padding: 8px 16px 0 16px; /* Nudge content down; only horizontal + top padding */
  margin: 0; /* Avoid margin collapse with parent that could shift hover boundary */
}

/* Lyric numbering */
.lyric-number {
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 24px;
  height: 32px;
  font-size: var(--md-body-small-size);
  font-weight: 400;
  color: var(--md-on-surface-variant);
  flex-shrink: 0;
  transition: color var(--md-duration-medium2) var(--md-easing-standard);
}

/* Current lyric numbering styling */
.lyric-item.current .lyric-number {
  color: var(--md-primary);
  font-weight: 500;
}

/* Allow lyric text to wrap to multiple lines - improved for very long text */
.lyric-text {
  flex: 1;
  overflow: visible; /* Allow content to be fully visible */
  white-space: normal; /* Allow text to wrap */
  margin-right: 16px; /* Space between text and timing controls */
  line-height: 1.5; /* Increased line height for better readability */
  word-break: break-word; /* Break long words if needed */
  padding: 0; /* No vertical padding to avoid affecting hover boundaries */
  min-height: 24px; /* Minimum height to prevent collapsing */
  display: block; /* Ensure block display for proper wrapping */
  width: 100%; /* Use full width available */
  cursor: pointer;
  user-select: none;
  position: relative; /* Needed for custom scrollbar track (::before) */
  transition: color var(--md-duration-medium2) var(--md-easing-standard),
              transform var(--md-duration-medium3) var(--md-easing-emphasized),
              font-weight var(--md-duration-medium2) var(--md-easing-standard);
}

/* Enhanced styling for current lyric text */
.lyric-item.current .lyric-text {
  color: var(--md-on-primary-container);
  transform: translateX(2px);
}

.lyric-text:hover {
  color: var(--md-primary);
}

.lyric-text span {
  display: block;
  padding: 4px 0;
  transition: transform var(--md-duration-medium2) var(--md-easing-emphasized);
}

.lyric-text:hover span {
  transform: translateX(4px);
}

.lyric-text-input {
  width: 100%;
  padding: 4px 8px;
  /* Nudge the input down slightly to align vertically with non-edit state */
  margin: 2px 0 0 0;
  border: 1px solid var(--border-color);
  border-radius: 12px;
  background: var(--background-primary);
  color: var(--text-primary);
  font-size: inherit;
  font-family: inherit;
  line-height: 1.5; /* Match non-edit text line height */
  box-sizing: border-box;
  transition: all 0.2s ease;
}

.lyric-text-input:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px var(--primary-color-light);
}

/* Material Design 3 controls container - positioned on the left */
.lyric-controls {
  display: flex;
  gap: 8px;
  opacity: 0;
  transition: opacity var(--md-duration-medium2) var(--md-easing-standard);
  position: relative;
  left: 0;
  z-index: 10;
  margin-right: 12px; /* Space between buttons and text */
}

.lyric-item:hover .lyric-controls {
  opacity: 1;
}

/* Material Design 3 unified button styles for all lyric control buttons */
.edit-lyric-btn,
.delete-lyric-btn,
.merge-lyric-btn {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 32px;
  height: 32px;
  padding: 0;
  border: none;
  border-radius: 50%;
  background-color: var(--md-primary-container);
  color: var(--md-on-primary-container);
  cursor: pointer;
  box-shadow: var(--md-elevation-level1);
  transition: background-color var(--md-duration-medium2) var(--md-easing-standard),
              color var(--md-duration-medium2) var(--md-easing-standard),
              transform var(--md-duration-medium2) var(--md-easing-emphasized),
              box-shadow var(--md-duration-medium2) var(--md-easing-standard);
  position: relative;
  overflow: hidden;
}

/* State layer for hover effect */
.edit-lyric-btn::before,
.delete-lyric-btn::before,
.merge-lyric-btn::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: transparent;
  transition: background-color var(--md-duration-medium2) var(--md-easing-standard);
  pointer-events: none;
  border-radius: 50%;
}

.edit-lyric-btn:hover::before,
.delete-lyric-btn:hover::before,
.merge-lyric-btn:hover::before {
  background-color: rgba(0, 0, 0, var(--md-state-hover-opacity));
}

.edit-lyric-btn:hover,
.delete-lyric-btn:hover,
.merge-lyric-btn:hover {
  transform: scale(1.1);
  box-shadow: var(--md-elevation-level2);
}

/* Specific colors for delete button */
.delete-lyric-btn {
  background-color: var(--md-error-container);
  color: var(--md-on-error-container);
}

/* SVG animations for button icons */
.edit-lyric-btn svg,
.delete-lyric-btn svg,
.insert-lyric-button svg,
.merge-lyrics-button svg {
  transition: transform var(--md-duration-medium2) var(--md-easing-emphasized);
}

/* Ensure icons use button text color for proper contrast in light/dark modes */
.edit-lyric-btn svg,
.delete-lyric-btn svg,
.insert-lyric-button svg,
.merge-lyrics-button svg,
.arrow-button svg {
  fill: currentColor;
}


.edit-lyric-btn:hover svg {
  transform: rotate(15deg);
}

.delete-lyric-btn:hover svg {
  transform: rotate(90deg);
}

.insert-lyric-button:hover svg {
  transform: scale(1.2);
}

.merge-lyrics-button:hover svg {
  transform: scale(1.2);
}

/* Material Design 3 timing controls - improved for multi-line text */
.timing-controls {
  display: flex;
  align-items: center;
  gap: 8px;
  margin-left: auto; /* Push to right side */
  margin-right: 16px; /* Push slightly left from the edge */
  font-size: var(--md-label-medium-size); /* Larger font size */
  line-height: var(--md-label-medium-height);
  color: var(--md-on-surface-variant);
  transition: color var(--transition-speed);
  white-space: nowrap; /* Prevent wrapping */
  position: relative; /* For positioning */
  min-width: 140px; /* Ensure minimum width for timing controls */
  align-self: flex-start; /* Align to top of container for multi-line text */
}

/* Material Design 3 time control - larger and more visible */
.time-control {
  display: inline-block;
  padding: 6px 10px;
  border: 1px solid var(--md-outline-variant);
  border-radius: var(--md-shape-small);
  background-color: var(--md-surface-1);
  font-family: 'JetBrains Mono', monospace;
  font-size: var(--md-body-small-size); /* Larger font size */
  font-weight: 500; /* Medium weight for better visibility */
  cursor: grab;
  user-select: none;
  color: var(--md-on-surface);
  transition: background-color var(--md-duration-medium2) var(--md-easing-standard),
              color var(--md-duration-medium2) var(--md-easing-standard),
              border-color var(--md-duration-medium2) var(--md-easing-standard),
              transform var(--md-duration-medium2) var(--md-easing-emphasized);
  min-width: 60px; /* Ensure minimum width for timing display */
  text-align: center; /* Center the text */
}

/* Material Design 3 time control hover state */
.time-control:hover:not(.dragging) {
  background-color: var(--md-primary-container);
  border-color: var(--md-primary);
  color: var(--md-on-primary-container);
}

/* Material Design 3 time control dragging state */
.time-control.dragging {
  background-color: var(--md-primary-container);
  border-color: var(--md-primary);
  color: var(--md-on-primary-container);
  cursor: grabbing;
  transform: scale(1.05);
  box-shadow: var(--md-elevation-level2);
  z-index: 10;
  /* Use hardware acceleration */
  will-change: transform;
}

/* Material Design 3 time separator */
.time-separator {
  margin: 0 5px;
  color: var(--md-on-surface-variant);
  transition: color var(--transition-speed);
  font-size: var(--md-label-small-size);
}

.progress-indicator {
  position: absolute;
  bottom: 0;
  left: 0;
  height: 4px;
  background-color: var(--primary-color);
  transform-origin: left center;
  will-change: transform;
  /* Add smooth transitions for appearance/disappearance */
  transition: background-color var(--transition-speed),
              opacity var(--md-duration-medium2) var(--md-easing-emphasized),
              height var(--md-duration-medium2) var(--md-easing-emphasized);
  /* Use hardware acceleration for smoother animation */
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -webkit-transform: translateZ(0);
  transform: translateZ(0);
  /* Start with opacity 0 for smooth fade-in */
  opacity: 0;
}

/* Show progress indicator only for current lyric */
.lyric-item.current .progress-indicator {
  opacity: 1;
}

/* Add this to your styles/LyricsDisplay.css or related stylesheet */

.lyric-item-container .lyric-text {
  /* This is the key part for the new behavior */
  max-height: 3.2em; /* (line-height * 2 lines). Adjust if your line-height is different. */
  overflow-y: auto;   /* Show vertical scrollbar only when needed */

  /* You might need to ensure these properties are set for consistency */
  line-height: 1.6em; /* Crucial for calculating max-height correctly */
  padding-right: 4px; /* Add some padding so the scrollbar doesn't overlap text */
  white-space: pre-wrap; /* Respects newlines and wraps text */
  word-break: break-word; /* Prevents long words from overflowing */
}

/* When editing, allow full height so the CustomScrollbarTextarea is not clipped */
.lyric-item-container .lyric-text.editing {
  max-height: none;
  overflow: visible;
  padding-right: 0;
}


/* Hide native scrollbar for lyric text (we will use functional custom scrollbar) */
.lyric-item-container .lyric-text {
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* IE and Edge */
}

.lyric-item-container .lyric-text::-webkit-scrollbar {
  display: none;
  width: 0;
  height: 0;
  background: transparent;
}

/* Remove the bad scrollbar track - we'll use the functional scrollbar instead */

/* Custom scrollbar thumb element (positioned on right side of lyric-content) */
.custom-scrollbar-thumb {
  position: absolute;
  right: 4px; /* Position on right side of lyric-content */
  width: 4px;
  min-height: 20px;
  background: rgba(var(--md-primary-rgb, 103, 80, 164), 0.6);
  border-radius: 50px;
  opacity: 1; /* Always visible, no hover requirement */
  transition: all 0.2s ease;
  pointer-events: auto; /* Always enabled */
  z-index: 10;
}

/* Dragging state */
.custom-scrollbar-thumb.dragging {
  background: var(--md-primary);
  width: 6px;
  right: 3px; /* Adjust for wider thumb when dragging */
  opacity: 1;
}

/* Dark mode */
[data-theme="dark"] .custom-scrollbar-thumb {
  background: rgba(var(--md-primary-rgb, 208, 188, 255), 0.6);
}
[data-theme="dark"] .custom-scrollbar-thumb.dragging {
  background: var(--md-primary);
}
